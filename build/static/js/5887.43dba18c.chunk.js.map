{"version":3,"file":"static/js/5887.43dba18c.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/ElevationSampler.js","../node_modules/@arcgis/core/layers/support/ElevationSamplerData.js","../node_modules/@arcgis/core/layers/support/ElevationTile.js","../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import\"../../core/has.js\";import{makeHandle as e}from\"../../core/handleUtils.js\";import t from\"../../core/Logger.js\";import{getMetersPerUnitForSR as n}from\"../../core/unitUtils.js\";import{toExtent as s,containsXY as i,create as o}from\"../../geometry/support/aaBoundingRect.js\";import{project as a}from\"../../geometry/support/webMercatorUtils.js\";import r from\"../../geometry/Point.js\";const l=t.getLogger(\"esri.layers.support.ElevationSampler\");class m{queryElevation(e){return p(e.clone(),this)}on(){return e()}projectIfRequired(e,t){return h(e,t)}}class c extends m{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super(),this.tile=e,this.noDataValue=i;const o=e.tile.extent;this.extent=s(o,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=o;const a=n(t.spatialReference),r=t.lodAt(e.tile.level).resolution*a;this.demResolution={min:r,max:r}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return null!=t&&this.containsAt(t.x,t.y)}containsAt(e,t){return i(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return l.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class u extends m{get spatialReference(){return this.extent.spatialReference}constructor(e,t,n){let i;super(),\"number\"==typeof t?(this.noDataValue=t,i=null):(i=t,this.noDataValue=n),this.samplers=i?e.map((e=>new c(e,i,this.noDataValue))):e;const a=this.samplers[0];if(a){this.extent=a.extent.clone();const{min:e,max:t}=a.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=s(o(),i.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const n of this.samplers)if(n.containsAt(e,t))return n.elevationAt(e,t);return l.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function p(e,t){const n=h(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":f(e,n,t);break;case\"polyline\":x(e,n,t);break;case\"multipoint\":R(e,n,t)}return e}function h(e,t){if(null==e)return null;const n=e.spatialReference;if(n.equals(t))return e;const s=a(e,t);return s||l.error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),s}function f(e,t,n){e.z=n.elevationAt(t.x,t.y)}function x(e,t,n){d.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],a=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=a[e];d.x=i[0],d.y=i[1],s&&(t[3]=t[2]),t[2]=n.elevationAt(d.x,d.y)}}e.hasZ=!0}function R(e,t,n){d.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],a=t.points[i];d.x=a[0],d.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(d.x,d.y)}e.hasZ=!0}const d=new r;export{m as ElevationSamplerBase,u as MultiTileElevationSampler,c as TileElevationSampler,p as updateGeometryElevation};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nclass t{constructor(t,h){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(h[2]-h[0]),this.dy=(t.width-1)/(h[3]-h[1]),this.x0=h[0],this.y1=h[3]}}export{t as ElevationSamplerData};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:r,dx:s,dy:n,y1:i,x0:u}=this._samplerData,{width:m,values:o,noDataValue:h}=r,p=l(n*(i-t),0,e),D=l(s*(a-u),0,e),f=Math.floor(p),c=Math.floor(D),d=f*m+c,_=d+m,x=o[d],V=o[_],g=o[d+1],v=o[_+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-c,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-f)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as l}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import o from\"../../geometry/Multipoint.js\";import a from\"../../geometry/Point.js\";import r from\"../../geometry/Polyline.js\";import{initializeProjection as c,project as u}from\"../../geometry/projection.js\";import{fromExtent as h,create as p,contains as m}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as f}from\"./ElevationSampler.js\";import{ElevationTile as d}from\"./ElevationTile.js\";import{TileKey as y}from\"./TileKey.js\";class T{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const l=v.fromGeometry(i);let s=!1;n&&n.returnSampleInfo||(s=!0);const o={...R,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof v)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const l={...R,...n},s=new x(e,i.spatialReference,l),o=l.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(s,i,o),await this._selectTiles(s,o),await this._populateElevationTiles(s,o),this._sampleGeometryWithElevation(s),this._createQueryResult(s,o)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n};return this._createSampler(e,i,l)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],i,l);return this._createSamplerAllContinue(e,i,s,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,o=e.tileInfo.spatialReference;s.equals(o)||(await c([{source:s,dest:o}],{signal:l}),t=u(t,o));const a=new _(e,t,i,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new f(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.map((e=>h(e.extent))),s=await this._createSampler(e[e.length-1],t,n,l);if(0===s.samplers.length)return i;const o=i.samplers.concat(s.samplers),a=new f(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const l=e.pop(),s=t.geometry.coordinates,o=t.sampleInfo;i(o);const a=[],r=[];for(let i=0;i<s.length;i++){const t=o[i];t.demResolution>=0?t.source||(t.source=l):e.length&&(a.push(s[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{s[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _createQueryResult(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const l={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),l}async _createGeometryDescriptor(e,i,n){let l;const s=e.layer.tileInfo.spatialReference;if(i instanceof v?l=await i.project(s,n):(await c([{source:i.spatialReference,dest:s}],{signal:n}),l=u(i,s)),!l)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=v.fromGeometry(l)}async _selectTiles(e,i){\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e);const n=e.options.demResolution;if(\"number\"==typeof n)this._selectTilesClosestResolution(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/s(i.spatialReference),o=q(i,n);let a=o[0],r=0;for(let s=1;s<o.length;s++){const e=o[s];Math.abs(e.resolution-l)<Math.abs(a.resolution-l)&&(a=e,r=s)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=E(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,i,s){const o=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=o.tilemapCache,r=e.getTilesToFetch();try{if(a&&!I(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},s=e.options.cache,o=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${o}`,a=null!=s?s.get(n):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:o,signal:t});null!=s&&s.put(n,r),l[i.id]=new d(i,r)}));await n(Promise.allSettled(a),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||I(s))return this._selectTilesAutoPrefetchUpsample(t,i);const o=t.getTilesToFetch(),a={},r=o.map((async t=>{const n=new y(null,0,0,0,p()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await n(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},s=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,s);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(s(n),t.upsampleTile(n)&&(o=!0),l(n))}),s),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=E(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=s(t.spatialReference);return e.geometry.coordinates.map((n=>{let l=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){l=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:l}}))}}class v{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new v;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new o({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=u(i,e);if(!n)return null;const l=this.coordinates.map(((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i})),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new v;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof v)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new w(i.x,i.y,i.z,i.m)]:n?[new w(i.x,i.y,i.z)]:l?[new w(i.x,i.y,null,i.m)]:[new w(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((e=>new w(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new w(e[0],e[1],e[2]))):l?i.points.map((e=>new w(e[0],e[1],null,e[2]))):i.points.map((e=>new w(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new o({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new o(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],l=[],{hasZ:s,hasM:o}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,s&&o)for(const t of e)n.push(new w(t[0],t[1],t[2],t[3]));else if(s)for(const t of e)n.push(new w(t[0],t[1],t[2]));else if(o)for(const t of e)n.push(new w(t[0],t[1],null,t[2]));else for(const t of e)n.push(new w(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),s=l.map((e=>n.slice(e[0],e[1])));return new r({paths:s,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class w{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new w(this.x,this.y,this.z,this.m)}}class g{constructor(e,t){this.layer=e,this.options=t}}class x extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class _ extends g{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let s=n.length-1;s>=0;s--){const i=n[s],o=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(l.width/o)*Math.ceil(l.height/a)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,n.push(s)):t&&t(s)}const l=n.sort(((e,t)=>e.level-t.level));return l.filter(((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&m(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=q(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),o=s.extent;if(null==o)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new y(null,s.level,s.row-h,s.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&m(t,e.extent)))}}function E(e,t,i=0){const n=q(e,t);let l=n.length-1;if(i>0){const t=i/s(e.spatialReference),o=n.findIndex((e=>e.resolution<t));0===o?l=0:o>0&&(l=o-1)}return l}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};function q(e,t){const i=e.lods;if(I(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}function I(e){return null!=e?.tileInfo}export{T as ElevationQuery,v as GeometryDescriptor,E as getFinestLodIndex};\n"],"names":["l","t","getLogger","m","_classCallCheck","_createClass","key","value","e","n","h","spatialReference","type","z","elevationAt","x","y","f","d","s","hasM","hasZ","i","paths","length","o","a","points","R","p","clone","this","c","_m","_inherits","_super","_createSuper","_this","call","tile","noDataValue","extent","zmin","zmax","_aaExtent","r","lodAt","level","resolution","demResolution","min","max","get","projectIfRequired","containsAt","_this$tile$sample","concat","xmin","ymin","xmax","ymax","warn","sample","u","_m2","_super2","_this2","samplers","map","_a$demResolution","union","Math","_step","_iterator","_createForOfIteratorHelper","done","err","equals","error","wkid","data","safeWidth","width","dx","dy","x0","y1","arguments","undefined","_samplerData","minValue","maxValue","_this$_samplerData","values","D","floor","_","V","g","v","T","_queryAll","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ignoreInvisibleLayers","filter","visible","slice","fromGeometry","returnSampleInfo","_objectSpread","query","sent","_queryAllContinue","abrupt","geometry","export","sampleInfo","stop","_x","_x2","_x3","apply","_query","_callee2","_context2","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","_x4","_x5","_x6","_createSampler2","_callee3","_context3","_createSampler","_x7","_x8","_x9","_createSamplerAll","_callee4","_context4","_createSamplerAllContinue","_x10","_x11","_x12","_createSampler3","_callee5","_context5","tileInfo","t0","source","dest","elevationTiles","layer","options","_x13","_x14","_x15","_x16","_createSamplerAllContinue2","_callee6","_context6","pop","_x17","_x18","_x19","_x20","_queryAllContinue2","_callee7","_i","_t","_context7","coordinates","push","Error","forEach","_x21","_x22","_x23","_createQueryResult2","_callee8","_context8","project","outSpatialReference","_extractSampleInfo","elevationTile","_x24","_x25","_createGeometryDescriptor2","_callee9","_context9","_x26","_x27","_x28","_selectTiles2","_callee10","_context10","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","_x29","_x30","fullExtent","outsideExtentTile","_findNearestDemResolutionLODIndex","selectTilesAtLOD","_e$layer","tilemapCache","q","abs","_selectTilesFinestContiguous2","_callee11","_e$layer2","_context11","E","minDemResolution","_selectTilesFinestContiguousAt","_x31","_x32","_selectTilesFinestContiguousAt2","_callee12","_context12","getTilesToFetch","I","Promise","all","fetchAvailability","row","col","allElevationTilesFetched","clearElevationTiles","_x33","_x34","_x35","_populateElevationTiles2","_callee14","_context14","cache","_ref","_callee13","_context13","id","uid","fetchTile","put","_x38","allSettled","populateElevationTiles","_x36","_x37","_selectTilesAuto2","_callee16","_context16","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","_ref2","_callee15","_context15","fetchAvailabilityUpsample","ok","_x41","remapTiles","_x39","_x40","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","_e$layer3","_selectTilesAutoPrefetchUpsample2","_callee17","_context17","_x42","_x43","_exporter","_project","_callee18","_context18","_x44","_x45","w","spatiaReference","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","_g","_this$layer","tileAt","some","_step6","_iterator6","_step7","_iterator7","_t7$tile","_step8","_iterator8","_t8$tile","_step9","_iterator9","_i7$tile","_step10","_iterator10","_loop","_g2","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","_selectCandidateTilesCoveringExtentAt","_this$layer2","size","ceil","height","clear","_step11","_iterator11","add","_uniqueNonOverlappingTiles","_this3","has","_step12","_iterator12","sort","_this$layer3","updateTileInfo","_tileIsMasked","findIndex","lods","effectiveMinLOD","effectiveMaxLOD"],"sourceRoot":""}